<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: temporal/api/common/v1/message.proto

namespace Temporal\Api\Common\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Priority contains metadata that controls relative ordering of task processing
 * when tasks are backlogged in a queue. Initially, Priority will be used in
 * activity and workflow task queues, which are typically where backlogs exist.
 * Other queues in the server (such as transfer and timer queues) and rate
 * limiting decisions do not use Priority, but may in the future.
 * Priority is attached to workflows and activities. Activities and child
 * workflows inherit Priority from the workflow that created them, but may
 * override fields when they are started or modified. For each field of a
 * Priority on an activity/workflow, not present or equal to zero/empty string
 * means to inherit the value from the calling workflow, or if there is no
 * calling workflow, then use the default (documented below).
 * Despite being named "Priority", this message will also contains fields that
 * control "fairness" mechanisms.
 * The overall semantics of Priority are:
 * 1. First, consider "priority_key": lower number goes first.
 * (more will be added here later)
 *
 * Generated from protobuf message <code>temporal.api.common.v1.Priority</code>
 */
class Priority extends \Google\Protobuf\Internal\Message
{
    /**
     * Priority key is a positive integer from 1 to n, where smaller integers
     * correspond to higher priorities (tasks run sooner). In general, tasks in
     * a queue should be processed in close to priority order, although small
     * deviations are possible.
     * The maximum priority value (minimum priority) is determined by server
     * configuration, and defaults to 5.
     * The default priority is (min+max)/2. With the default max of 5 and min of
     * 1, that comes out to 3.
     *
     * Generated from protobuf field <code>int32 priority_key = 1;</code>
     */
    protected $priority_key = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $priority_key
     *           Priority key is a positive integer from 1 to n, where smaller integers
     *           correspond to higher priorities (tasks run sooner). In general, tasks in
     *           a queue should be processed in close to priority order, although small
     *           deviations are possible.
     *           The maximum priority value (minimum priority) is determined by server
     *           configuration, and defaults to 5.
     *           The default priority is (min+max)/2. With the default max of 5 and min of
     *           1, that comes out to 3.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Common\V1\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * Priority key is a positive integer from 1 to n, where smaller integers
     * correspond to higher priorities (tasks run sooner). In general, tasks in
     * a queue should be processed in close to priority order, although small
     * deviations are possible.
     * The maximum priority value (minimum priority) is determined by server
     * configuration, and defaults to 5.
     * The default priority is (min+max)/2. With the default max of 5 and min of
     * 1, that comes out to 3.
     *
     * Generated from protobuf field <code>int32 priority_key = 1;</code>
     * @return int
     */
    public function getPriorityKey()
    {
        return $this->priority_key;
    }

    /**
     * Priority key is a positive integer from 1 to n, where smaller integers
     * correspond to higher priorities (tasks run sooner). In general, tasks in
     * a queue should be processed in close to priority order, although small
     * deviations are possible.
     * The maximum priority value (minimum priority) is determined by server
     * configuration, and defaults to 5.
     * The default priority is (min+max)/2. With the default max of 5 and min of
     * 1, that comes out to 3.
     *
     * Generated from protobuf field <code>int32 priority_key = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setPriorityKey($var)
    {
        GPBUtil::checkInt32($var);
        $this->priority_key = $var;

        return $this;
    }

}

