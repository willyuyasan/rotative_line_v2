<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: temporal/api/common/v1/message.proto

namespace Temporal\Api\Common\V1\Link;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.common.v1.Link.WorkflowEvent</code>
 */
class WorkflowEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string namespace = 1;</code>
     */
    protected $namespace = '';
    /**
     * Generated from protobuf field <code>string workflow_id = 2;</code>
     */
    protected $workflow_id = '';
    /**
     * Generated from protobuf field <code>string run_id = 3;</code>
     */
    protected $run_id = '';
    protected $reference;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $namespace
     *     @type string $workflow_id
     *     @type string $run_id
     *     @type \Temporal\Api\Common\V1\Link\WorkflowEvent\EventReference $event_ref
     *     @type \Temporal\Api\Common\V1\Link\WorkflowEvent\RequestIdReference $request_id_ref
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Common\V1\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string namespace = 1;</code>
     * @return string
     */
    public function getNamespace()
    {
        return $this->namespace;
    }

    /**
     * Generated from protobuf field <code>string namespace = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->namespace = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string workflow_id = 2;</code>
     * @return string
     */
    public function getWorkflowId()
    {
        return $this->workflow_id;
    }

    /**
     * Generated from protobuf field <code>string workflow_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setWorkflowId($var)
    {
        GPBUtil::checkString($var, True);
        $this->workflow_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string run_id = 3;</code>
     * @return string
     */
    public function getRunId()
    {
        return $this->run_id;
    }

    /**
     * Generated from protobuf field <code>string run_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRunId($var)
    {
        GPBUtil::checkString($var, True);
        $this->run_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.temporal.api.common.v1.Link.WorkflowEvent.EventReference event_ref = 100;</code>
     * @return \Temporal\Api\Common\V1\Link\WorkflowEvent\EventReference|null
     */
    public function getEventRef()
    {
        return $this->readOneof(100);
    }

    public function hasEventRef()
    {
        return $this->hasOneof(100);
    }

    /**
     * Generated from protobuf field <code>.temporal.api.common.v1.Link.WorkflowEvent.EventReference event_ref = 100;</code>
     * @param \Temporal\Api\Common\V1\Link\WorkflowEvent\EventReference $var
     * @return $this
     */
    public function setEventRef($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\Link\WorkflowEvent\EventReference::class);
        $this->writeOneof(100, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.temporal.api.common.v1.Link.WorkflowEvent.RequestIdReference request_id_ref = 101;</code>
     * @return \Temporal\Api\Common\V1\Link\WorkflowEvent\RequestIdReference|null
     */
    public function getRequestIdRef()
    {
        return $this->readOneof(101);
    }

    public function hasRequestIdRef()
    {
        return $this->hasOneof(101);
    }

    /**
     * Generated from protobuf field <code>.temporal.api.common.v1.Link.WorkflowEvent.RequestIdReference request_id_ref = 101;</code>
     * @param \Temporal\Api\Common\V1\Link\WorkflowEvent\RequestIdReference $var
     * @return $this
     */
    public function setRequestIdRef($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\Link\WorkflowEvent\RequestIdReference::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getReference()
    {
        return $this->whichOneof("reference");
    }

}

