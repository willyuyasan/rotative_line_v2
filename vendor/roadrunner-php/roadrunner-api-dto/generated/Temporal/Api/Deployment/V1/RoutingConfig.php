<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: temporal/api/deployment/v1/message.proto

namespace Temporal\Api\Deployment\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.deployment.v1.RoutingConfig</code>
 */
class RoutingConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Always present. Specifies which Deployment Version should should receive new workflow
     * executions and tasks of existing unversioned or AutoUpgrade workflows.
     * Can be one of the following:
     * - A Deployment Version identifier in the form "<deployment_name>.<build_id>".
     * - Or, the "__unversioned__" special value, to represent all the unversioned workers (those
     *   with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)
     * Note: Current Version is overridden by the Ramping Version for a portion of traffic when a ramp
     * is set (see `ramping_version`.)
     *
     * Generated from protobuf field <code>string current_version = 1;</code>
     */
    protected $current_version = '';
    /**
     * When present, it means the traffic is being shifted from the Current Version to the Ramping
     * Version.
     * Must always be different from Current Version. Can be one of the following:
     * - A Deployment Version identifier in the form "<deployment_name>.<build_id>".
     * - Or, the "__unversioned__" special value, to represent all the unversioned workers (those
     *   with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)
     * Note that it is possible to ramp from one Version to another Version, or from unversioned
     * workers to a particular Version, or from a particular Version to unversioned workers.
     *
     * Generated from protobuf field <code>string ramping_version = 2;</code>
     */
    protected $ramping_version = '';
    /**
     * Percentage of tasks that are routed to the Ramping Version instead of the Current Version.
     * Valid range: [0, 100]. A 100% value means the Ramping Version is receiving full traffic but
     * not yet "promoted" to be the Current Version, likely due to pending validations.
     *
     * Generated from protobuf field <code>float ramping_version_percentage = 3;</code>
     */
    protected $ramping_version_percentage = 0.0;
    /**
     * Last time current version was changed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp current_version_changed_time = 4;</code>
     */
    protected $current_version_changed_time = null;
    /**
     * Last time ramping version was changed. Not updated if only the ramp percentage changes.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ramping_version_changed_time = 5;</code>
     */
    protected $ramping_version_changed_time = null;
    /**
     * Last time ramping version percentage was changed.
     * If ramping version is changed, this is also updated, even if the percentage stays the same.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ramping_version_percentage_changed_time = 6;</code>
     */
    protected $ramping_version_percentage_changed_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $current_version
     *           Always present. Specifies which Deployment Version should should receive new workflow
     *           executions and tasks of existing unversioned or AutoUpgrade workflows.
     *           Can be one of the following:
     *           - A Deployment Version identifier in the form "<deployment_name>.<build_id>".
     *           - Or, the "__unversioned__" special value, to represent all the unversioned workers (those
     *             with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)
     *           Note: Current Version is overridden by the Ramping Version for a portion of traffic when a ramp
     *           is set (see `ramping_version`.)
     *     @type string $ramping_version
     *           When present, it means the traffic is being shifted from the Current Version to the Ramping
     *           Version.
     *           Must always be different from Current Version. Can be one of the following:
     *           - A Deployment Version identifier in the form "<deployment_name>.<build_id>".
     *           - Or, the "__unversioned__" special value, to represent all the unversioned workers (those
     *             with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)
     *           Note that it is possible to ramp from one Version to another Version, or from unversioned
     *           workers to a particular Version, or from a particular Version to unversioned workers.
     *     @type float $ramping_version_percentage
     *           Percentage of tasks that are routed to the Ramping Version instead of the Current Version.
     *           Valid range: [0, 100]. A 100% value means the Ramping Version is receiving full traffic but
     *           not yet "promoted" to be the Current Version, likely due to pending validations.
     *     @type \Google\Protobuf\Timestamp $current_version_changed_time
     *           Last time current version was changed.
     *     @type \Google\Protobuf\Timestamp $ramping_version_changed_time
     *           Last time ramping version was changed. Not updated if only the ramp percentage changes.
     *     @type \Google\Protobuf\Timestamp $ramping_version_percentage_changed_time
     *           Last time ramping version percentage was changed.
     *           If ramping version is changed, this is also updated, even if the percentage stays the same.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Deployment\V1\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * Always present. Specifies which Deployment Version should should receive new workflow
     * executions and tasks of existing unversioned or AutoUpgrade workflows.
     * Can be one of the following:
     * - A Deployment Version identifier in the form "<deployment_name>.<build_id>".
     * - Or, the "__unversioned__" special value, to represent all the unversioned workers (those
     *   with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)
     * Note: Current Version is overridden by the Ramping Version for a portion of traffic when a ramp
     * is set (see `ramping_version`.)
     *
     * Generated from protobuf field <code>string current_version = 1;</code>
     * @return string
     */
    public function getCurrentVersion()
    {
        return $this->current_version;
    }

    /**
     * Always present. Specifies which Deployment Version should should receive new workflow
     * executions and tasks of existing unversioned or AutoUpgrade workflows.
     * Can be one of the following:
     * - A Deployment Version identifier in the form "<deployment_name>.<build_id>".
     * - Or, the "__unversioned__" special value, to represent all the unversioned workers (those
     *   with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)
     * Note: Current Version is overridden by the Ramping Version for a portion of traffic when a ramp
     * is set (see `ramping_version`.)
     *
     * Generated from protobuf field <code>string current_version = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCurrentVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->current_version = $var;

        return $this;
    }

    /**
     * When present, it means the traffic is being shifted from the Current Version to the Ramping
     * Version.
     * Must always be different from Current Version. Can be one of the following:
     * - A Deployment Version identifier in the form "<deployment_name>.<build_id>".
     * - Or, the "__unversioned__" special value, to represent all the unversioned workers (those
     *   with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)
     * Note that it is possible to ramp from one Version to another Version, or from unversioned
     * workers to a particular Version, or from a particular Version to unversioned workers.
     *
     * Generated from protobuf field <code>string ramping_version = 2;</code>
     * @return string
     */
    public function getRampingVersion()
    {
        return $this->ramping_version;
    }

    /**
     * When present, it means the traffic is being shifted from the Current Version to the Ramping
     * Version.
     * Must always be different from Current Version. Can be one of the following:
     * - A Deployment Version identifier in the form "<deployment_name>.<build_id>".
     * - Or, the "__unversioned__" special value, to represent all the unversioned workers (those
     *   with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)
     * Note that it is possible to ramp from one Version to another Version, or from unversioned
     * workers to a particular Version, or from a particular Version to unversioned workers.
     *
     * Generated from protobuf field <code>string ramping_version = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRampingVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->ramping_version = $var;

        return $this;
    }

    /**
     * Percentage of tasks that are routed to the Ramping Version instead of the Current Version.
     * Valid range: [0, 100]. A 100% value means the Ramping Version is receiving full traffic but
     * not yet "promoted" to be the Current Version, likely due to pending validations.
     *
     * Generated from protobuf field <code>float ramping_version_percentage = 3;</code>
     * @return float
     */
    public function getRampingVersionPercentage()
    {
        return $this->ramping_version_percentage;
    }

    /**
     * Percentage of tasks that are routed to the Ramping Version instead of the Current Version.
     * Valid range: [0, 100]. A 100% value means the Ramping Version is receiving full traffic but
     * not yet "promoted" to be the Current Version, likely due to pending validations.
     *
     * Generated from protobuf field <code>float ramping_version_percentage = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setRampingVersionPercentage($var)
    {
        GPBUtil::checkFloat($var);
        $this->ramping_version_percentage = $var;

        return $this;
    }

    /**
     * Last time current version was changed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp current_version_changed_time = 4;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCurrentVersionChangedTime()
    {
        return $this->current_version_changed_time;
    }

    public function hasCurrentVersionChangedTime()
    {
        return isset($this->current_version_changed_time);
    }

    public function clearCurrentVersionChangedTime()
    {
        unset($this->current_version_changed_time);
    }

    /**
     * Last time current version was changed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp current_version_changed_time = 4;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCurrentVersionChangedTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->current_version_changed_time = $var;

        return $this;
    }

    /**
     * Last time ramping version was changed. Not updated if only the ramp percentage changes.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ramping_version_changed_time = 5;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getRampingVersionChangedTime()
    {
        return $this->ramping_version_changed_time;
    }

    public function hasRampingVersionChangedTime()
    {
        return isset($this->ramping_version_changed_time);
    }

    public function clearRampingVersionChangedTime()
    {
        unset($this->ramping_version_changed_time);
    }

    /**
     * Last time ramping version was changed. Not updated if only the ramp percentage changes.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ramping_version_changed_time = 5;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setRampingVersionChangedTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->ramping_version_changed_time = $var;

        return $this;
    }

    /**
     * Last time ramping version percentage was changed.
     * If ramping version is changed, this is also updated, even if the percentage stays the same.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ramping_version_percentage_changed_time = 6;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getRampingVersionPercentageChangedTime()
    {
        return $this->ramping_version_percentage_changed_time;
    }

    public function hasRampingVersionPercentageChangedTime()
    {
        return isset($this->ramping_version_percentage_changed_time);
    }

    public function clearRampingVersionPercentageChangedTime()
    {
        unset($this->ramping_version_percentage_changed_time);
    }

    /**
     * Last time ramping version percentage was changed.
     * If ramping version is changed, this is also updated, even if the percentage stays the same.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp ramping_version_percentage_changed_time = 6;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setRampingVersionPercentageChangedTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->ramping_version_percentage_changed_time = $var;

        return $this;
    }

}

