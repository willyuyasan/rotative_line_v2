<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: temporal/api/enums/v1/nexus.proto

namespace Temporal\Api\Enums\V1;

use UnexpectedValueException;

/**
 * NexusHandlerErrorRetryBehavior allows nexus handlers to explicity set the retry behavior of a HandlerError. If not
 * specified, retry behavior is determined from the error type. For example internal errors are not retryable by default
 * unless specified otherwise.
 *
 * Protobuf type <code>temporal.api.enums.v1.NexusHandlerErrorRetryBehavior</code>
 */
class NexusHandlerErrorRetryBehavior
{
    /**
     * Generated from protobuf enum <code>NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_UNSPECIFIED = 0;</code>
     */
    const NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_UNSPECIFIED = 0;
    /**
     * A handler error is explicitly marked as retryable.
     *
     * Generated from protobuf enum <code>NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_RETRYABLE = 1;</code>
     */
    const NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_RETRYABLE = 1;
    /**
     * A handler error is explicitly marked as non-retryable.
     *
     * Generated from protobuf enum <code>NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_NON_RETRYABLE = 2;</code>
     */
    const NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_NON_RETRYABLE = 2;

    private static $valueToName = [
        self::NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_UNSPECIFIED => 'NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_UNSPECIFIED',
        self::NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_RETRYABLE => 'NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_RETRYABLE',
        self::NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_NON_RETRYABLE => 'NEXUS_HANDLER_ERROR_RETRY_BEHAVIOR_NON_RETRYABLE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

