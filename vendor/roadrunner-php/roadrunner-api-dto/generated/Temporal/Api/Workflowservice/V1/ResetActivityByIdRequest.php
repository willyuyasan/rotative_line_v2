<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: temporal/api/workflowservice/v1/request_response.proto

namespace Temporal\Api\Workflowservice\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.workflowservice.v1.ResetActivityByIdRequest</code>
 */
class ResetActivityByIdRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Namespace of the workflow which scheduled this activity.
     *
     * Generated from protobuf field <code>string namespace = 1;</code>
     */
    protected $namespace = '';
    /**
     * ID of the workflow which scheduled this activity.
     *
     * Generated from protobuf field <code>string workflow_id = 2;</code>
     */
    protected $workflow_id = '';
    /**
     * Run ID of the workflow which scheduled this activity.
     * If empty - latest workflow is used.
     *
     * Generated from protobuf field <code>string run_id = 3;</code>
     */
    protected $run_id = '';
    /**
     * ID of the activity we're updating.
     *
     * Generated from protobuf field <code>string activity_id = 4;</code>
     */
    protected $activity_id = '';
    /**
     * The identity of the client who initiated this request.
     *
     * Generated from protobuf field <code>string identity = 5;</code>
     */
    protected $identity = '';
    /**
     * Used to de-dupe requests.
     *
     * Generated from protobuf field <code>string request_id = 6;</code>
     */
    protected $request_id = '';
    /**
     * Indicates that activity should be scheduled immediately.
     * If this flag doesn't set, and activity currently running - temporal will wait until activity is completed.
     *
     * Generated from protobuf field <code>bool no_wait = 7;</code>
     */
    protected $no_wait = false;
    /**
     * Indicates that activity should reset heartbeat details.
     * This flag will be applied only to the new instance of the activity.
     *
     * Generated from protobuf field <code>bool reset_heartbeat = 8;</code>
     */
    protected $reset_heartbeat = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $namespace
     *           Namespace of the workflow which scheduled this activity.
     *     @type string $workflow_id
     *           ID of the workflow which scheduled this activity.
     *     @type string $run_id
     *           Run ID of the workflow which scheduled this activity.
     *           If empty - latest workflow is used.
     *     @type string $activity_id
     *           ID of the activity we're updating.
     *     @type string $identity
     *           The identity of the client who initiated this request.
     *     @type string $request_id
     *           Used to de-dupe requests.
     *     @type bool $no_wait
     *           Indicates that activity should be scheduled immediately.
     *           If this flag doesn't set, and activity currently running - temporal will wait until activity is completed.
     *     @type bool $reset_heartbeat
     *           Indicates that activity should reset heartbeat details.
     *           This flag will be applied only to the new instance of the activity.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Workflowservice\V1\RequestResponse::initOnce();
        parent::__construct($data);
    }

    /**
     * Namespace of the workflow which scheduled this activity.
     *
     * Generated from protobuf field <code>string namespace = 1;</code>
     * @return string
     */
    public function getNamespace()
    {
        return $this->namespace;
    }

    /**
     * Namespace of the workflow which scheduled this activity.
     *
     * Generated from protobuf field <code>string namespace = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->namespace = $var;

        return $this;
    }

    /**
     * ID of the workflow which scheduled this activity.
     *
     * Generated from protobuf field <code>string workflow_id = 2;</code>
     * @return string
     */
    public function getWorkflowId()
    {
        return $this->workflow_id;
    }

    /**
     * ID of the workflow which scheduled this activity.
     *
     * Generated from protobuf field <code>string workflow_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setWorkflowId($var)
    {
        GPBUtil::checkString($var, True);
        $this->workflow_id = $var;

        return $this;
    }

    /**
     * Run ID of the workflow which scheduled this activity.
     * If empty - latest workflow is used.
     *
     * Generated from protobuf field <code>string run_id = 3;</code>
     * @return string
     */
    public function getRunId()
    {
        return $this->run_id;
    }

    /**
     * Run ID of the workflow which scheduled this activity.
     * If empty - latest workflow is used.
     *
     * Generated from protobuf field <code>string run_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRunId($var)
    {
        GPBUtil::checkString($var, True);
        $this->run_id = $var;

        return $this;
    }

    /**
     * ID of the activity we're updating.
     *
     * Generated from protobuf field <code>string activity_id = 4;</code>
     * @return string
     */
    public function getActivityId()
    {
        return $this->activity_id;
    }

    /**
     * ID of the activity we're updating.
     *
     * Generated from protobuf field <code>string activity_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setActivityId($var)
    {
        GPBUtil::checkString($var, True);
        $this->activity_id = $var;

        return $this;
    }

    /**
     * The identity of the client who initiated this request.
     *
     * Generated from protobuf field <code>string identity = 5;</code>
     * @return string
     */
    public function getIdentity()
    {
        return $this->identity;
    }

    /**
     * The identity of the client who initiated this request.
     *
     * Generated from protobuf field <code>string identity = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setIdentity($var)
    {
        GPBUtil::checkString($var, True);
        $this->identity = $var;

        return $this;
    }

    /**
     * Used to de-dupe requests.
     *
     * Generated from protobuf field <code>string request_id = 6;</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Used to de-dupe requests.
     *
     * Generated from protobuf field <code>string request_id = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Indicates that activity should be scheduled immediately.
     * If this flag doesn't set, and activity currently running - temporal will wait until activity is completed.
     *
     * Generated from protobuf field <code>bool no_wait = 7;</code>
     * @return bool
     */
    public function getNoWait()
    {
        return $this->no_wait;
    }

    /**
     * Indicates that activity should be scheduled immediately.
     * If this flag doesn't set, and activity currently running - temporal will wait until activity is completed.
     *
     * Generated from protobuf field <code>bool no_wait = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setNoWait($var)
    {
        GPBUtil::checkBool($var);
        $this->no_wait = $var;

        return $this;
    }

    /**
     * Indicates that activity should reset heartbeat details.
     * This flag will be applied only to the new instance of the activity.
     *
     * Generated from protobuf field <code>bool reset_heartbeat = 8;</code>
     * @return bool
     */
    public function getResetHeartbeat()
    {
        return $this->reset_heartbeat;
    }

    /**
     * Indicates that activity should reset heartbeat details.
     * This flag will be applied only to the new instance of the activity.
     *
     * Generated from protobuf field <code>bool reset_heartbeat = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setResetHeartbeat($var)
    {
        GPBUtil::checkBool($var);
        $this->reset_heartbeat = $var;

        return $this;
    }

}

