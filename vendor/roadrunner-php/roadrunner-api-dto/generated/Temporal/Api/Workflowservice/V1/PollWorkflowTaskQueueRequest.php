<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: temporal/api/workflowservice/v1/request_response.proto

namespace Temporal\Api\Workflowservice\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.workflowservice.v1.PollWorkflowTaskQueueRequest</code>
 */
class PollWorkflowTaskQueueRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string namespace = 1;</code>
     */
    protected $namespace = '';
    /**
     * Generated from protobuf field <code>.temporal.api.taskqueue.v1.TaskQueue task_queue = 2;</code>
     */
    protected $task_queue = null;
    /**
     * The identity of the worker/client who is polling this task queue
     *
     * Generated from protobuf field <code>string identity = 3;</code>
     */
    protected $identity = '';
    /**
     * DEPRECATED since 1.21 - use `worker_version_capabilities` instead.
     * Each worker process should provide an ID unique to the specific set of code it is running
     * "checksum" in this field name isn't very accurate, it should be though of as an id.
     *
     * Generated from protobuf field <code>string binary_checksum = 4;</code>
     */
    protected $binary_checksum = '';
    /**
     * Information about this worker's build identifier and if it is choosing to use the versioning
     * feature. See the `WorkerVersionCapabilities` docstring for more.
     * Deprecated. Replaced by deployment_options.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.WorkerVersionCapabilities worker_version_capabilities = 5 [deprecated = true];</code>
     * @deprecated
     */
    protected $worker_version_capabilities = null;
    /**
     * Worker deployment options that user has set in the worker.
     * Experimental. Worker Deployments are experimental and might significantly change in the future.
     *
     * Generated from protobuf field <code>.temporal.api.deployment.v1.WorkerDeploymentOptions deployment_options = 6;</code>
     */
    protected $deployment_options = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $namespace
     *     @type \Temporal\Api\Taskqueue\V1\TaskQueue $task_queue
     *     @type string $identity
     *           The identity of the worker/client who is polling this task queue
     *     @type string $binary_checksum
     *           DEPRECATED since 1.21 - use `worker_version_capabilities` instead.
     *           Each worker process should provide an ID unique to the specific set of code it is running
     *           "checksum" in this field name isn't very accurate, it should be though of as an id.
     *     @type \Temporal\Api\Common\V1\WorkerVersionCapabilities $worker_version_capabilities
     *           Information about this worker's build identifier and if it is choosing to use the versioning
     *           feature. See the `WorkerVersionCapabilities` docstring for more.
     *           Deprecated. Replaced by deployment_options.
     *     @type \Temporal\Api\Deployment\V1\WorkerDeploymentOptions $deployment_options
     *           Worker deployment options that user has set in the worker.
     *           Experimental. Worker Deployments are experimental and might significantly change in the future.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Workflowservice\V1\RequestResponse::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string namespace = 1;</code>
     * @return string
     */
    public function getNamespace()
    {
        return $this->namespace;
    }

    /**
     * Generated from protobuf field <code>string namespace = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->namespace = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.temporal.api.taskqueue.v1.TaskQueue task_queue = 2;</code>
     * @return \Temporal\Api\Taskqueue\V1\TaskQueue|null
     */
    public function getTaskQueue()
    {
        return $this->task_queue;
    }

    public function hasTaskQueue()
    {
        return isset($this->task_queue);
    }

    public function clearTaskQueue()
    {
        unset($this->task_queue);
    }

    /**
     * Generated from protobuf field <code>.temporal.api.taskqueue.v1.TaskQueue task_queue = 2;</code>
     * @param \Temporal\Api\Taskqueue\V1\TaskQueue $var
     * @return $this
     */
    public function setTaskQueue($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Taskqueue\V1\TaskQueue::class);
        $this->task_queue = $var;

        return $this;
    }

    /**
     * The identity of the worker/client who is polling this task queue
     *
     * Generated from protobuf field <code>string identity = 3;</code>
     * @return string
     */
    public function getIdentity()
    {
        return $this->identity;
    }

    /**
     * The identity of the worker/client who is polling this task queue
     *
     * Generated from protobuf field <code>string identity = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setIdentity($var)
    {
        GPBUtil::checkString($var, True);
        $this->identity = $var;

        return $this;
    }

    /**
     * DEPRECATED since 1.21 - use `worker_version_capabilities` instead.
     * Each worker process should provide an ID unique to the specific set of code it is running
     * "checksum" in this field name isn't very accurate, it should be though of as an id.
     *
     * Generated from protobuf field <code>string binary_checksum = 4;</code>
     * @return string
     */
    public function getBinaryChecksum()
    {
        return $this->binary_checksum;
    }

    /**
     * DEPRECATED since 1.21 - use `worker_version_capabilities` instead.
     * Each worker process should provide an ID unique to the specific set of code it is running
     * "checksum" in this field name isn't very accurate, it should be though of as an id.
     *
     * Generated from protobuf field <code>string binary_checksum = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setBinaryChecksum($var)
    {
        GPBUtil::checkString($var, True);
        $this->binary_checksum = $var;

        return $this;
    }

    /**
     * Information about this worker's build identifier and if it is choosing to use the versioning
     * feature. See the `WorkerVersionCapabilities` docstring for more.
     * Deprecated. Replaced by deployment_options.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.WorkerVersionCapabilities worker_version_capabilities = 5 [deprecated = true];</code>
     * @return \Temporal\Api\Common\V1\WorkerVersionCapabilities|null
     * @deprecated
     */
    public function getWorkerVersionCapabilities()
    {
        if (isset($this->worker_version_capabilities)) {
            @trigger_error('worker_version_capabilities is deprecated.', E_USER_DEPRECATED);
        }
        return $this->worker_version_capabilities;
    }

    public function hasWorkerVersionCapabilities()
    {
        if (isset($this->worker_version_capabilities)) {
            @trigger_error('worker_version_capabilities is deprecated.', E_USER_DEPRECATED);
        }
        return isset($this->worker_version_capabilities);
    }

    public function clearWorkerVersionCapabilities()
    {
        @trigger_error('worker_version_capabilities is deprecated.', E_USER_DEPRECATED);
        unset($this->worker_version_capabilities);
    }

    /**
     * Information about this worker's build identifier and if it is choosing to use the versioning
     * feature. See the `WorkerVersionCapabilities` docstring for more.
     * Deprecated. Replaced by deployment_options.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.WorkerVersionCapabilities worker_version_capabilities = 5 [deprecated = true];</code>
     * @param \Temporal\Api\Common\V1\WorkerVersionCapabilities $var
     * @return $this
     * @deprecated
     */
    public function setWorkerVersionCapabilities($var)
    {
        @trigger_error('worker_version_capabilities is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\WorkerVersionCapabilities::class);
        $this->worker_version_capabilities = $var;

        return $this;
    }

    /**
     * Worker deployment options that user has set in the worker.
     * Experimental. Worker Deployments are experimental and might significantly change in the future.
     *
     * Generated from protobuf field <code>.temporal.api.deployment.v1.WorkerDeploymentOptions deployment_options = 6;</code>
     * @return \Temporal\Api\Deployment\V1\WorkerDeploymentOptions|null
     */
    public function getDeploymentOptions()
    {
        return $this->deployment_options;
    }

    public function hasDeploymentOptions()
    {
        return isset($this->deployment_options);
    }

    public function clearDeploymentOptions()
    {
        unset($this->deployment_options);
    }

    /**
     * Worker deployment options that user has set in the worker.
     * Experimental. Worker Deployments are experimental and might significantly change in the future.
     *
     * Generated from protobuf field <code>.temporal.api.deployment.v1.WorkerDeploymentOptions deployment_options = 6;</code>
     * @param \Temporal\Api\Deployment\V1\WorkerDeploymentOptions $var
     * @return $this
     */
    public function setDeploymentOptions($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Deployment\V1\WorkerDeploymentOptions::class);
        $this->deployment_options = $var;

        return $this;
    }

}

